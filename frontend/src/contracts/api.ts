// @generated by protobuf-ts 2.9.4 with parameter optimize_code_size
// @generated from protobuf file "contracts/api.proto" (syntax proto3)
// tslint:disable
import { ServiceType } from "@protobuf-ts/runtime-rpc";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message HelloRequest
 */
export interface HelloRequest {
    /**
     * @generated from protobuf field: string my_name = 1;
     */
    myName: string;
    /**
     * @generated from protobuf field: int32 my_age = 2;
     */
    myAge: number;
}
/**
 * @generated from protobuf message HelloResponse
 */
export interface HelloResponse {
    /**
     * @generated from protobuf field: string response_text = 1;
     */
    responseText: string;
    /**
     * @generated from protobuf field: int32 server_unix_time_i = 2;
     */
    serverUnixTimeI: number;
    /**
     * @generated from protobuf field: string server_unix_time_str = 3;
     */
    serverUnixTimeStr: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class HelloRequest$Type extends MessageType<HelloRequest> {
    constructor() {
        super("HelloRequest", [
            { no: 1, name: "my_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "my_age", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message HelloRequest
 */
export const HelloRequest = new HelloRequest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HelloResponse$Type extends MessageType<HelloResponse> {
    constructor() {
        super("HelloResponse", [
            { no: 1, name: "response_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "server_unix_time_i", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "server_unix_time_str", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
}
/**
 * @generated MessageType for protobuf message HelloResponse
 */
export const HelloResponse = new HelloResponse$Type();
/**
 * @generated ServiceType for protobuf service MyHelloService
 */
export const MyHelloService = new ServiceType("MyHelloService", [
    { name: "Hello", options: {}, I: HelloRequest, O: HelloResponse },
    { name: "HelloStream", serverStreaming: true, options: {}, I: HelloRequest, O: HelloResponse }
]);
